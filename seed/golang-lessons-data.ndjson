{"_id":"lesson-go-introduction","_type":"lesson","title":"Introduction to Go Programming","slug":{"current":"introduction-go-programming"},"chapter":[{"_type":"reference","_ref":"chapter-go-basics"}],"content":"# Introduction to Go Programming\n\nGo (Golang) is an open-source programming language developed by Google. It's designed for building simple, reliable, and efficient software."}
{"_id":"lesson-go-setup","_type":"lesson","title":"Setting Up Go Development Environment","slug":{"current":"setting-up-go-development"},"chapter":[{"_type":"reference","_ref":"chapter-go-basics"}],"content":"# Setting Up Go Development Environment\n\nLearn how to install Go and set up your development environment for Go programming."}
{"_id":"lesson-go-syntax","_type":"lesson","title":"Go Syntax and Basic Concepts","slug":{"current":"go-syntax-basic-concepts"},"chapter":[{"_type":"reference","_ref":"chapter-go-basics"}],"content":"# Go Syntax and Basic Concepts\n\nLearn the fundamental syntax and concepts of Go programming including packages, functions, and control structures."}
{"_id":"lesson-go-variables-types","_type":"lesson","title":"Variables and Data Types","slug":{"current":"variables-data-types-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-basics"}],"content":"# Variables and Data Types in Go\n\nMaster Go's type system including basic data types, variable declarations, and constants."}
{"_id":"lesson-go-arrays-slices","_type":"lesson","title":"Arrays and Slices","slug":{"current":"arrays-slices-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-data-structures"}],"content":"# Arrays and Slices in Go\n\nLearn about Go's array and slice data structures for storing collections of data."}
{"_id":"lesson-go-maps","_type":"lesson","title":"Maps in Go","slug":{"current":"maps-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-data-structures"}],"content":"# Maps in Go\n\nMaster Go's built-in associative data type for key-value storage and manipulation."}
{"_id":"lesson-go-structs","_type":"lesson","title":"Structs and Methods","slug":{"current":"structs-methods-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-data-structures"}],"content":"# Structs and Methods in Go\n\nLearn how to create custom data types using structs and add behavior with methods."}
{"_id":"lesson-go-interfaces","_type":"lesson","title":"Interfaces in Go","slug":{"current":"interfaces-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-data-structures"}],"content":"# Interfaces in Go\n\nUnderstand Go's interface system for creating flexible and maintainable code through polymorphism."}
{"_id":"lesson-go-http-server","_type":"lesson","title":"Building HTTP Servers","slug":{"current":"building-http-servers-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-web-fundamentals"}],"content":"# Building HTTP Servers in Go\n\nLearn to build web servers using Go's built-in net/http package for handling HTTP requests and responses."}
{"_id":"lesson-go-routing","_type":"lesson","title":"Routing and URL Handling","slug":{"current":"routing-url-handling-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-web-fundamentals"}],"content":"# Routing and URL Handling in Go\n\nMaster URL routing, path parameters, and query string handling in Go web applications."}
{"_id":"lesson-go-middleware","_type":"lesson","title":"Middleware in Go","slug":{"current":"middleware-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-web-fundamentals"}],"content":"# Middleware in Go\n\nImplement middleware functions for cross-cutting concerns like logging, authentication, and CORS."}
{"_id":"lesson-go-json-handling","_type":"lesson","title":"JSON Handling in Go","slug":{"current":"json-handling-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-web-fundamentals"}],"content":"# JSON Handling in Go\n\nLearn to encode and decode JSON data for building REST APIs and handling HTTP requests."}
{"_id":"lesson-go-database-drivers","_type":"lesson","title":"Database Drivers and Connections","slug":{"current":"database-drivers-connections"},"chapter":[{"_type":"reference","_ref":"chapter-go-database"}],"content":"# Database Drivers and Connections\n\nLearn how to connect Go applications to databases using various database drivers and connection pooling."}
{"_id":"lesson-go-sql-operations","_type":"lesson","title":"SQL Operations in Go","slug":{"current":"sql-operations-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-database"}],"content":"# SQL Operations in Go\n\nMaster CRUD operations using Go's database/sql package for interacting with SQL databases."}
{"_id":"lesson-go-orm-gorm","_type":"lesson","title":"Using GORM ORM","slug":{"current":"using-gorm-orm"},"chapter":[{"_type":"reference","_ref":"chapter-go-database"}],"content":"# Using GORM ORM\n\nLearn to use GORM, a popular ORM library for Go, to simplify database operations and model relationships."}
{"_id":"lesson-go-migrations","_type":"lesson","title":"Database Migrations","slug":{"current":"database-migrations-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-database"}],"content":"# Database Migrations in Go\n\nImplement database schema migrations to manage database changes and versioning in Go applications."}
{"_id":"lesson-go-project-setup","_type":"lesson","title":"REST API Project Setup","slug":{"current":"rest-api-project-setup"},"chapter":[{"_type":"reference","_ref":"chapter-go-api-project"}],"content":"# REST API Project Setup\n\nSet up a complete Go project structure for building a production-ready REST API with proper organization."}
{"_id":"lesson-go-api-endpoints","_type":"lesson","title":"Building API Endpoints","slug":{"current":"building-api-endpoints"},"chapter":[{"_type":"reference","_ref":"chapter-go-api-project"}],"content":"# Building API Endpoints\n\nCreate RESTful API endpoints with proper HTTP methods, status codes, and JSON responses."}
{"_id":"lesson-go-authentication","_type":"lesson","title":"Authentication with JWT","slug":{"current":"authentication-jwt-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-api-project"}],"content":"# Authentication with JWT\n\nImplement JWT-based authentication for securing your Go REST API endpoints and managing user sessions."}
{"_id":"lesson-go-testing-deployment","_type":"lesson","title":"Testing and Deployment","slug":{"current":"testing-deployment-go"},"chapter":[{"_type":"reference","_ref":"chapter-go-api-project"}],"content":"# Testing and Deployment\n\nWrite comprehensive tests for your Go API and learn deployment strategies for production environments."}
